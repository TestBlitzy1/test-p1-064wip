apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus
  namespace: monitoring
  labels:
    app: prometheus
    component: monitoring
    tier: monitoring
    version: v2.45.0
  annotations:
    prometheus.io/scrape: 'true'
    prometheus.io/port: '9090'
    kubernetes.io/description: 'Prometheus monitoring system deployment'
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: prometheus
        component: monitoring
      annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/port: '9090'
        checksum/config: '${CONFIG_CHECKSUM}'
    spec:
      serviceAccountName: prometheus
      securityContext:
        fsGroup: 65534
        runAsNonRoot: true
        runAsUser: 65534
        seccompProfile:
          type: RuntimeDefault
      containers:
        - name: prometheus-server
          image: prom/prometheus:v2.45.0
          imagePullPolicy: IfNotPresent
          args:
            - --config.file=/etc/prometheus/prometheus.yml
            - --storage.tsdb.path=/prometheus
            - --storage.tsdb.retention.time=15d
            - --web.console.libraries=/usr/share/prometheus/console_libraries
            - --web.console.templates=/usr/share/prometheus/consoles
            - --web.enable-lifecycle
            - --storage.tsdb.no-lockfile
            - --storage.tsdb.wal-compression
          ports:
            - name: http
              containerPort: 9090
              protocol: TCP
          resources:
            requests:
              cpu: '500m'
              memory: '2Gi'
            limits:
              cpu: '1000m'
              memory: '4Gi'
          volumeMounts:
            - name: prometheus-config
              mountPath: /etc/prometheus
              readOnly: true
            - name: prometheus-storage
              mountPath: /prometheus
          livenessProbe:
            httpGet:
              path: /-/healthy
              port: http
            initialDelaySeconds: 30
            timeoutSeconds: 30
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /-/ready
              port: http
            initialDelaySeconds: 30
            timeoutSeconds: 30
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          startupProbe:
            httpGet:
              path: /-/ready
              port: http
            initialDelaySeconds: 30
            periodSeconds: 5
            failureThreshold: 30
      volumes:
        - name: prometheus-config
          configMap:
            name: prometheus-config
            defaultMode: 420
        - name: prometheus-storage
          persistentVolumeClaim:
            claimName: prometheus-storage
      terminationGracePeriodSeconds: 300
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - prometheus
                topologyKey: kubernetes.io/hostname